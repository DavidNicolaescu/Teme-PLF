(defun factorial(n)
	(if(<= n 0)
		1
		(* (factorial (- n 1)) n)
	)
)


(defun suma (l)
	(if (endp l)
		0
		(if (numberp (car l))
			(+ (suma (cdr l)) (car l))
			(suma (cdr l))
		)
	)
)

(defun putere (x y)
	(if (eq y 0)
		1
		(* x (putere x (- y 1)))
	)
)

(defun fibonacci (n)
	(cond 
	((eq n 1) 0)
	((eq n 2) 1)
	((+ (fibonacci (- n 1)) (fibonacci (- n 2))))
	)
)
///// problema 1
(defun renunta (a b)
	(if b 
		(if (eq a (car b))
			(cdr b)
			(cons (car b) (renunta a (cdr b)))
		)
	)
)
///// probmlema 1
(defun suma (l)
	(if (null l)
		0
		(+ (car l) ( suma (cdr l)))
	)
)
///// problema 2
(defun lungime (l)
	(if (null l)
		0
		(+ 1 (lungime (cdr l)))
	)
)

(defun medie (l)
	(if (null l)
		0
		(/ (suma l) (lungime l))
	)
)

////problema 4
(defun lista_para (l)
	(if l
		(cons (car (cdr l)) (lista_para (cdr (cdr l))))	
	)
)
